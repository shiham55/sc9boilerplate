@using Glass.Mapper.Sc.Web.Mvc;
@using ilight2019.Foundation.SharedPageContent;
@using ilight2019.Foundation.SharedPageContent.Models;
@using ilight2019.Foundation.SitecoreExtensions.Extensions;

@inherits GlassView<IMainContentMultipleTitle>

@if (Model == null || !Model.SCItem.IsDerived(Templates.MultipleTitles.ID))
{
    return;
}

@{
    bool isDesktopTitleAvailable = !string.IsNullOrEmpty(Model.DesktopTitleOne) || !string.IsNullOrEmpty(Model.DesktopTitleTwo);
    bool isMobileTitleAvailable = !string.IsNullOrEmpty(Model.MobileTitleOne) || !string.IsNullOrEmpty(Model.MobileTitleTwo) || !string.IsNullOrEmpty(Model.MobileTitleThree);
}

<div class="body">
    <div class="container">
        <div class="row-col-12">
            <div class="col-12-md space-left">
                <div class="standard-banner">
                    @{
                        var bannerImage = Model.BannerImage != null && !string.IsNullOrEmpty(Model.BannerImage.Src) ? Model.BannerImage.Src : "";
                        var noBannerClass = Model.BannerImage != null && !string.IsNullOrEmpty(Model.BannerImage.Src) ? "" : "no-banner";
                        <div style="background-image: url(@bannerImage)" class="standard-banner__bg @noBannerClass"></div>
                    }
                    @if (isDesktopTitleAvailable || isMobileTitleAvailable)
                    {

                        <div class="standard-banner__content">
                            @if (isDesktopTitleAvailable)
                            {
                                <h1 class="shine desktop-only">
                                    @if (!string.IsNullOrEmpty(Model.DesktopTitleOne))
                                    {
                                        <span>@Editable(Model, x => x.DesktopTitleOne)</span>
                                    }
                                    @if (!string.IsNullOrEmpty(Model.DesktopTitleTwo))
                                    {
                                        <span>@Editable(Model, x => x.DesktopTitleTwo)</span>
                                    }
                                </h1>
                            }
                            @if (isMobileTitleAvailable)
                            {
                                <h1 class="shine handheld-only">
                                    @if (!string.IsNullOrEmpty(Model.MobileTitleOne))
                                    {
                                        <span>@Editable(Model, x => x.MobileTitleOne)</span>
                                    }
                                    @if (!string.IsNullOrEmpty(Model.MobileTitleTwo))
                                    {
                                        <span>@Editable(Model, x => x.MobileTitleTwo)</span>
                                    }
                                    @if (!string.IsNullOrEmpty(Model.MobileTitleThree))
                                    {
                                        <span>@Editable(Model, x => x.MobileTitleThree)</span>
                                    }
                                </h1>
                            }
                        </div>
                    }
                </div>
                @if (!string.IsNullOrEmpty(Model.MainContent))
                {
                    <div class="standard-content">
                        <div class="rte">
                            @Editable(Model, x => x.MainContent)
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>