@using Glass.Mapper.Sc.Web.Mvc;
@using scboilerplate.Feature.Navigation;
@using scboilerplate.Feature.Navigation.Models.ViewModels;
@using scboilerplate.Foundation.ContentStore.Models.SitecoreModels;
@using scboilerplate.Foundation.SitecoreExtensions.Extensions;

@inherits GlassView<FooterViewModel>

@if (Model == null || !Model.Footer.SCItem.IsDerived(Templates.Footer.ID))
{
    return;
}

<footer class="footer">
    <aside class="sidebar">
        <div class="sidebar__wrap">
            <div class="share-wrap">
                <div class="sidebar__dates">
                    @Editable(Model, x => x.Footer.EventDate)
                </div>
				<div class="sidebar__social">
					<a href="#" class="addthis_facebook addthis_inline_share_toolbox"></a>
					<a href="#" class="addthis_twitter addthis_inline_share_toolbox_hc5s"></a>
					<a href="#" class="addthis_mail addthis_inline_share_toolbox_rfog"></a>
				</div>
                <div class="sidebar__hashtag">
                    @using (BeginRenderLink(Model, x => x.Footer.InstagramLink, isEditable: true))
                    {
                        <span>
                            @Editable(Model, x => x.Footer.InstagramText)
                        </span>
                    }
                </div>
            </div>
        </div>
    </aside>
    <div class="container">
            <div class="row-col-12 footer__top">
                <div class="col-8-md">
                    @foreach (ILogoCategoryFolder logoCategoryFolder in Model.TopRowLogoCategoryFolders)
                    {
                        <div class="col-4-md">
                            <p>@logoCategoryFolder.LogoCategoryName</p>
                            <div class="footer__logos">
                                @foreach (ILogoItem logo in logoCategoryFolder.Logos.Where(x => x.ShowInFooter))
                                {
                                    if (logo.LogoUrl != null && !string.IsNullOrEmpty(logo.LogoUrl.Url))
                                    {
                                        using (BeginRenderLink(logo, x => x.LogoUrl))
                                        {
                                            <img class="lazy" data-src="@((logo.LogoImage!=null)?logo.LogoImage.Src:String.Empty)" src="@((logo.LogoImage!=null)?logo.LogoImage.Src:String.Empty)" />
                                        }
                                    }
                                    else
                                    {
                                        <img class="lazy" data-src="@((logo.LogoImage!=null)?logo.LogoImage.Src:String.Empty)" src="@((logo.LogoImage!=null)?logo.LogoImage.Src:String.Empty)" />
                                    }
                                }
                            </div>
                        </div>
                    }
                </div>
                <div class="col-10-md">
                    @foreach (ILogoCategoryFolder logoCategoryFolder in Model.BottomRowLogoCategoryFolders)
                    {
                    <div class="footer__sponsor">
                        <p>@logoCategoryFolder.LogoCategoryName</p>
                        <div class="footer__logos">
                            @foreach (ILogoItem logo in logoCategoryFolder.Logos.Where(x => x.ShowInFooter))
                            {
                                if (logo.LogoUrl != null && !string.IsNullOrEmpty(logo.LogoUrl.Url))
                                {
                                    using (BeginRenderLink(logo, x => x.LogoUrl))
                                    {
                                        <img class="lazy" data-src="@((logo.LogoImage!=null)?logo.LogoImage.Src:String.Empty)" src="@((logo.LogoImage!=null)?logo.LogoImage.Src:String.Empty)" />
                                    }
                                }
                                else
                                {
                                    <img class="lazy" data-src="@((logo.LogoImage!=null)?logo.LogoImage.Src:String.Empty)" src="@((logo.LogoImage!=null)?logo.LogoImage.Src:String.Empty)" />
                                }
                            }
                        </div>
                    </div>
                    }
                </div>
            </div>
            <div class="row-col-12 footer__bottom">
                <div class="col-6-md footer__left">
                    <nav class="footer-menu">
                        <ul class="footer-menu__list">
                            @if (Model.Footer.FooterLinkOne != null)
                            {
                                <li class="footer-menu__item">
                                    @RenderLink(Model, x => x.Footer.FooterLinkOne, new { @class = "footer-menu__link" }, isEditable: true)
                                </li>
                            }
                            @if (Model.Footer.FooterLinkTwo != null)
                            {
                                <li class="footer-menu__item">
                                    @RenderLink(Model, x => x.Footer.FooterLinkTwo, new { @class = "footer-menu__link" }, isEditable: true)
                                </li>
                            }
                            @if (Model.Footer.FooterLinkThree != null)
                            {
                                <li class="footer-menu__item">
                                    @RenderLink(Model, x => x.Footer.FooterLinkThree, new { @class = "footer-menu__link" }, isEditable: true)
                                </li>
                            }
                            @if (Model.Footer.FooterLinkFour != null)
                            {
                                <li class="footer-menu__item">
                                    @RenderLink(Model, x => x.Footer.FooterLinkFour, new { @class = "footer-menu__link" }, isEditable: true)
                                </li>
                            }
                            @if (Model.Footer.ContactUsLink != null)
                            {
                                <li class="footer-menu__item">
                                    @RenderLink(Model, x => x.Footer.ContactUsLink, new { @class = "footer-menu__link" }, isEditable: true)
                                </li>
                            }
                        </ul>
                    </nav>
                    <p class="copyright">
                        @Editable(Model, x => x.Footer.CopyRightText)
                    </p>
                    <p class="last-updated">Last updated on @Model.LastUpdatedDate</p>
                </div>
                <div class="col-6-md footer__right">
                    @if (Model.Footer.SubscribeLink != null)
                    {
                        <div class="subscribe">
                            <span class="subscribe__text">@Editable(Model, x => x.Footer.SubscribeInfoText)</span>
                            @using (BeginRenderLink(Model, x => x.Footer.SubscribeLink))
                            {
                                <button class="subscribe__btn">@Editable(Model, x => x.Footer.SubscribeButtonText)</button>
                            }
                        </div>
                    }
                    <div class="connect">
                        <span class="connect__text">@Editable(Model, x => x.Footer.SocialLinksInfoText)</span>
                        <ul>
                            <li>
                                @using (BeginRenderLink(Model, x => x.Footer.FacebookLink, new { @class = "icon icon-facebook" }, isEditable: true))
                                {
                                }
                            </li>
                            <li>
                                @using (BeginRenderLink(Model, x => x.Footer.InstagramLink, new { @class = "icon icon-instagram" }, isEditable: true))
                                {
                                }
                            </li>
                            <li>
                                @using (BeginRenderLink(Model, x => x.Footer.YoutubeLink, new { @class = "icon icon-youtube" }, isEditable: true))
                                {
                                }
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
    </div>
</footer>